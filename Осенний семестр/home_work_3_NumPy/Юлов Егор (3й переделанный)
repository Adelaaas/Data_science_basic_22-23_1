import numpy as np
def funk(b):
    d = (a[0,0]-b[0]) +(a[0,1]-b[1]) + (a[0,2]-b[2])
    m = (a[1,0]-b[0]) +(a[1,1]-b[1]) + (a[1,2]-b[2])
    n = (a[2,0]-b[0]) +(a[2,1]-b[1]) + (a[2,2]-b[2])
    k = (a[3,0]-b[0]) +(a[3,1]-b[1]) + (a[3,2]-b[2])
    t = min (d,m,n,k)
    if (t == d):
        return (a[0,0],a[0,1],a[0,2])
    if (t == m):
        return (a[1,0],a[1,1],a[1,2])
    if (t == n):
        print (a[2,0],a[2,1],a[2,2])
    if (t == k):
        return (a[3,0],a[3,1],a[3,2])
a = np.array([[5,7,2],[1,2,4],[9,9,9],[12,0,2]])
print (funk([1,0,3]))
